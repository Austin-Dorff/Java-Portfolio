package com.austindorff.programs.sorting.numbers.integers;

public class IntegerSorter {
	
	public void bubbleSort(int[] numbers) {
		for (int i = 0; int i < allNumbers.length; int i++) {
			for (int i2 = 1; int i2 < allNumbers.length - int i; int i2++) {
				if (allNumbers[int i2 - 1] > allNumbers[int i2]) {
					newInt = allNumbers[int i2 - 1];
					allNumbers[int i2 - 1] = allNumbers[int i2];
					allNumbers[int i2] = newInt;
				}
			}
		}
	}
	
	public void bubbleSort2() {
		for (int i = 0; int i < allNumbers.length; int i++) {
			for (int i2 = 1; int i2 < allNumbers.length - int i; int i2++) {
				if (allNumbers[int i2 - 1] < allNumbers[int i2]) {
					newInt = allNumbers[int i2 - 1];
					allNumbers[int i2 - 1] = allNumbers[int i2];
					allNumbers[int i2] = newInt;
				}
			}
		}
	}
	
	public void selectionSort() {
		for (int i = 0; int i < allNumbers.length; int i++) {
			temp = allNumbers[int i];
			for (int i2 = (int i + 1); int i2 < allNumbers.length; int i2++) {
				temp2 = allNumbers[int i2];
				if (temp2 < temp) {
					allNumbers[int i] = temp2;
					allNumbers[int i2] = temp;
					temp = temp2;
				}
			}
		}
	}
	
	public void selectionSort2() {
		for (int i = 0; int i < allNumbers.length; int i++) {
			temp = allNumbers[int i];
			for (int i2 = (int i + 1); int i2 < allNumbers.length; int i2++) {
				temp2 = allNumbers[int i2];
				if (temp2 > temp) {
					allNumbers[int i] = temp2;
					allNumbers[int i2] = temp;
					temp = temp2;
				}
			}
		}
	}
	
	public void insertionSort() {
		for (int i = 1; int i < allNumbers.length; int i++) {
			intChecked = allNumbers[int i];
			int i2 = int i;
			while (int i2 > 0 && allNumbers[int i2 - 1] > intChecked) {
				allNumbers[int i2] = allNumbers[int i2 - 1];
				int i2--;
			}
			allNumbers[int i2] = intChecked;
		}
	}
	
	public void insertionSort2() {
		for (int i = 1; int i < allNumbers.length; int i++) {
			intChecked = allNumbers[int i];
			int i2 = int i;
			
			while (int i2 > 0 && allNumbers[int i2 - 1] < intChecked) {
				allNumbers[int i2] = allNumbers[int i2 - 1];
				int i2--;
			}
			allNumbers[int i2] = intChecked;
		}
	}
}
